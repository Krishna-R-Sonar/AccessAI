// my-chatbot/src/LearningPath.js
import { useState, useEffect, useRef } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import ReactMarkdown from 'react-markdown';
import axios from 'axios';

// NOTE: Ideally, this data would be fetched or imported from a shared location.
const learningPaths = {
    javascript: {
        chapters: [
            {
                title: 'JavaScript Fundamentals',
                lessons: [
                    { id: 1, title: 'Introduction to JavaScript', difficulty: 'Beginner', points: 50 },
                    { id: 2, title: 'Setting Up Your Environment', difficulty: 'Beginner', points: 50 },
                ],
            },
            // ... other chapters
        ],
    },
    // ... other languages
};

function LearningPath({ user }) {
  const { language } = useParams();
  const navigate = useNavigate();
  const [theme, setTheme] = useState('light'); // Assuming a default theme
  const [currentLesson, setCurrentLesson] = useState(null);
  const [lessonContent, setLessonContent] = useState('');
  const [loading, setLoading] = useState(false);

  const path = learningPaths[language];

  if (!path) {
    navigate('/');
    return null;
  }
  
  const startLesson = async (lesson) => {
      setCurrentLesson(lesson);
      setLoading(true);
      // Simplified prompt for generating lesson content
      const prompt = `Provide a detailed lesson on "${lesson.title}" for ${language}. Include concepts, code examples, and a simple challenge.`;
      try {
          // This would be your actual API call
          // const response = await axios.post(API_URL, ...);
          // setLessonContent(response.data.response);
          
          // Mock response for demonstration
          setTimeout(() => {
              setLessonContent(`## ${lesson.title}\n\nThis is a placeholder for the lesson content about **${lesson.title}**. In a real scenario, this would be generated by the AI based on the prompt. It would include detailed explanations, code snippets, and a challenge for you to complete.`);
              setLoading(false);
          }, 1000);
          
      } catch (error) {
          setLessonContent('Error: Could not load lesson content.');
          setLoading(false);
      }
  }

  return (
    <div className={`app-container ${theme}`}>
      <header className="header">
        <div className="header-left">
           <button className="btn btn-secondary" onClick={() => navigate('/')}>‚Üê Back to Chat</button>
        </div>
        <div className="header-right">
             <h1 className="app-title">{language.charAt(0).toUpperCase() + language.slice(1)} Path</h1>
        </div>
      </header>
      <div className="main-layout container" style={{gap: 'var(--space-6)'}}>
         <aside className="sidebar open" style={{position: 'sticky', transform: 'none', height: 'calc(100vh - 70px)'}}>
            <h2>Lessons</h2>
            {path.chapters.map((chapter, chapIdx) => (
                <div className="sidebar-section" key={chapIdx}>
                    <h3>{chapter.title}</h3>
                    {chapter.lessons.map((lesson, lessIdx) => (
                       <button 
                         key={lessIdx} 
                         className="btn btn-secondary" 
                         style={{width: '100%', marginBottom: 'var(--space-2)', justifyContent: 'flex-start'}}
                         onClick={() => startLesson(lesson)}
                       >
                         {lesson.title}
                       </button>
                    ))}
                </div>
            ))}
         </aside>
         <main className="main-content" style={{marginLeft: 0}}>
            <div className="card">
                {loading && <div className="spinner"></div>}
                {!loading && currentLesson && (
                    <>
                        <h2>{currentLesson.title}</h2>
                        <ReactMarkdown>{lessonContent}</ReactMarkdown>
                        <button className="btn btn-primary">Mark as Complete</button>
                    </>
                )}
                 {!loading && !currentLesson && (
                    <div>
                        <h2>Welcome to the {language} learning path!</h2>
                        <p>Select a lesson from the left sidebar to get started.</p>
                    </div>
                )}
            </div>
         </main>
      </div>
    </div>
  );
}

export default LearningPath;